
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СформироватьДиаграммуПосещенияАттракционов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	СформироватьДиаграммуПосещенияАттракционов();
КонецПроцедуры

&НаКлиенте
Процедура ПосещенияАттракционовОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	//TODO: Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Процедура ПосещенияАттракционовВыбор(Элемент, ЗначениеДиаграммы, СтандартнаяОбработка)
	Аттракцион = ЗначениеДиаграммы.Серия.Значение;
	День = ЗначениеДиаграммы.Точка.Значение;
	ПользовательскиеНастройки = НастройкиОтчетаДетализиацияПосещений(Аттракцион, День);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПользовательскиеНастройки", ПользовательскиеНастройки);
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	
	ОткрытьФорму("Отчет.ДетализацияПосещений.ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура Обновить(Команда)
	СформироватьДиаграммуПосещенияАттракционов();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция НастройкиОтчетаДетализиацияПосещений(Аттракцион, День)
	Отчет = Отчеты.ДетализацияПосещений.Создать();
	ПользовательскиеНастройки = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки;
	Настройки = Отчет.КомпоновщикНастроек.Настройки;
	// Установка параметра период
	ПараметрПериод = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	ПользовательскийПараметрПериод = ПользовательскиеНастройки.Элементы.Найти(ПараметрПериод.ИдентификаторПользовательскойНастройки);
	ЗначениеПараметраПериод = Новый СтандартныйПериод();
	ЗначениеПараметраПериод.ДатаНачала = НачалоДня(День);
	ЗначениеПараметраПериод.ДатаОкончания = КонецДня(День);
	ПользовательскийПараметрПериод.Значение = ЗначениеПараметраПериод;
	
	// Установка отбора Аттракцион
	ПолеДляОтбора = Новый ПолеКомпоновкиДанных("Аттракцион");
	Для Каждого ЭлементОтбора Из Настройки.Отбор.Элементы Цикл
		Если ЭлементОтбора.ЛевоеЗначение = ПолеДляОтбора Тогда
			ПользовательскийПараметрАттракцион =
				ПользовательскиеНастройки.Элементы.Найти(ЭлементОтбора.ИдентификаторПользовательскойНастройки);
			ПользовательскийПараметрАттракцион.Использование = Истина;
			ПользовательскийПараметрАттракцион.ПравоеЗначение = Аттракцион;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПользовательскиеНастройки;
КонецФункции

&НаСервере
Процедура СформироватьДиаграммуПосещенияАттракционов()
	ПосещенияАттракционов.Очистить();
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПосещенияАттракционовОбороты.Период КАК День,
		|	ПосещенияАттракционовОбороты.Аттракцион КАК Аттракцион,
		|	ПосещенияАттракционовОбороты.КоличествоОборот КАК КоличествоПосещений
		|ИЗ
		|	РегистрНакопления.ПосещенияАттракционов.Обороты(&НачалоПериода,&КонецПериода, День,) КАК ПосещенияАттракционовОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	День";
	
	Запрос.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", Период.ДатаОкончания);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Точка = ПосещенияАттракционов.УстановитьТочку(Выборка.День);
		Точка.Текст = Формат(Выборка.День, "ДЛФ=D;");
		Серия = ПосещенияАттракционов.УстановитьСерию(Выборка.Аттракцион);
		ПосещенияАттракционов.УстановитьЗначение(Точка, Серия, Выборка.КоличествоПосещений);
	КонецЦикла;
	ВремяПоследнегоОбновления = ТекущаяДатаСеанса();
КонецПроцедуры

#КонецОбласти
